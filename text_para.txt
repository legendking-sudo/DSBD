One famous method is using bag of words. Like the word "good" is positive and word "bad" is negative. Also you can go further for phrases like "not good" is a negative sentimental. Also for the blogosphere like twitter or web comments you can use amd indicators like smileys (like :) is positive and :( is negative). The final touch requires going deeper in the natural language processing with syntax or even pragmatics level, which requires a longer process time and more complex implementations. SentiWordNet based or SO-PMI-IR, both lexicon based, methods could be used. However, detecting sarcasm may be a problem with almost all lexicon based methods. A good option may be to train a machine learning classifier to detect sarcastic sentences and then reverse theri sentiment polarity computed through the SentiWordNet or SO-PMI-IR. In case entity-level sentiment polarity classification is to be done, Alchemy API is a good option (other than designing own feature vector based approach). I have written a Word Sense Disambiguation algorithm for English for about 1,200 words in English with about a 94% accuracy rate (each word is accurately identified at least 94% of the time.  It requires grammatical tagging, and works pretty well.  PM or email me if you have any questions on the nuts and bolts or would like to get your corpus tagged and run through my program.  